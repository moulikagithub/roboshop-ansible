- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable previous version of nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
  - name: install nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present
  - name: create application user
    ansible.builtin.user:
     name: roboshop
  - name: delete previous directory
    ansible.builtin.file:
     path: /app
     state: absent
  - name: create directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: download user application
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/user.zip
     dest: /tmp/user.zip
  - name: unarchive user application
    ansible.builtin.unarchive:
     src: /tmp/user.zip
     dest: /app
     remote_src: yes
  - name: install dependencies
    ansible.builtin.command: npm install 
    args:
      chdir: /app
  - name: copy user.service
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service
  - name: deamon realod and start
    ansible.builtin.systemd_service:
      daemon_reload: true
   # let's start after the data is loaded

  - name: Copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present
  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.kalidindi.cloud --quiet --eval 'db = db.getSiblingDB("user"); db.user.count()'
    register: user_count

  - name: print the count
    ansible.builtin.debug:
      msg: "product count: {{user_count}}"

  - name: load catalogue data
    ansible.builtin.shell: mongo --host mongodb.kalidindi.cloud < /app/schema/user.js
    when: user_count.stdout == "0" # keep double quotes

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes
  
  